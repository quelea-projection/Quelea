<?xml version="1.0" encoding="UTF-8"?>
<project name="Quelea" default="default" basedir=".">
    <description>Builds, tests, and runs Quelea.</description>
    <import file="nbproject/build-impl.xml"/>
    <import file="nbproject/profiler-build-impl.xml"/>
    <taskdef name="izpack" classpath="${basedir}/izpack/standalone-compiler.jar"
             classname="com.izforge.izpack.ant.IzPackTask"/>
    <taskdef name="launch4j" classpath="launch4j/launch4j.jar" classname="net.sf.launch4j.ant.Launch4jTask"/>
    <taskdef name="desktopentry" classpath="antdeb/ant-deb-0.0.1.jar"
             classname="com.googlecode.ant_deb_task.DesktopEntry"/>
    <taskdef name="deb" classpath="lib/jdeb-0.8.jar" classname="org.vafer.jdeb.ant.DebAntTask"/>
    <property file="quelea.properties"/>
    
    <property name="dist.jar.dir" value="${basedir}/dist"/>
    
    <property name="CPInstallerName" value="quelea-${quelea.version}-crossplatform-install.jar"/>
    <property name="WindowsInstallerName" value="quelea-${quelea.version}-windows-install.exe"/>
    <property name="DebInstallerName" value="quelea-${quelea.version}-deb-install.deb"/>
    <property name="PortableName" value="quelea-${quelea.version}-portable.zip"/>

    <property name="CPInstaller" value="${dist.jar.dir}/standalone/${CPInstallerName}"/>
    <property name="WindowsInstaller" value="${dist.jar.dir}/standalone/${WindowsInstallerName}"/>
    <property name="DebInstaller" value="${dist.jar.dir}/standalone/${DebInstallerName}"/>
    <property name="Portable" value="${dist.jar.dir}/standalone/${PortableName}"/>

    <target name="-post-jar">
        
        <echo message="Built jar."/>
        <echo message="Copying necessary files to ${dist.jar.dir}"/>
        <copy todir="${dist.jar.dir}/lib">
            <fileset dir="${basedir}/lib"/>
        </copy>
        <copy todir="${dist.jar.dir}/themes">
            <fileset dir="${basedir}/themes"/>
        </copy>
        <copy todir="${dist.jar.dir}/icons">
            <fileset dir="${basedir}/icons"/>
        </copy>
        <copy todir="${dist.jar.dir}/bibles">
            <fileset dir="${basedir}/bibles"/>
        </copy>
        <copy todir="${dist.jar.dir}/dictionaries">
            <fileset dir="${basedir}/dictionaries"/>
        </copy>
        <copy todir="${dist.jar.dir}/languages">
            <fileset dir="${basedir}/languages"/>
        </copy>
<!--        <copy todir="${dist.jar.dir}/database">
            <fileset dir="${basedir}/database"/>
        </copy>-->
        <copy todir="${dist.jar.dir}/img">
            <fileset dir="${basedir}/img"/>
        </copy>
        <copy todir="${dist.jar.dir}/src">
            <fileset dir="${basedir}/src"/>
        </copy>
        <delete file="${dist.jar.dir}/README.TXT" failonerror="false"/>
        <copy file="${basedir}/README.TXT" todir="${dist.jar.dir}" failonerror="false"/>
        <copy file="${basedir}/quelea.properties" todir="${dist.jar.dir}"/>
        <copy file="${basedir}/Quelea.iss" todir="${dist.jar.dir}"/>
        <copy file="${basedir}/build-install.bat" todir="${dist.jar.dir}"/>
        <copy file="${basedir}/licenses/gplv3.txt" tofile="${dist.jar.dir}/license.txt"/>
        <mkdir dir="${dist.jar.dir}/queleadoc" />
        <copy file="${basedir}/licenses/copyright" tofile="${dist.jar.dir}/queleadoc/copyright"/>
        <copy file="${basedir}/changelogs/changelog-${quelea.version}.gz" tofile="${dist.jar.dir}/queleadoc/changelog.gz"/>
        
        <echo message="Building deb package for Ubuntu / Debian installs"/>
        <deb destfile="${dist.jar.dir}/Quelea-temp.deb" control="control" verbose="true">
            <tarfileset dir="${dist.jar.dir}"
                        prefix="/usr/share/quelea">
                <exclude name="lib/native/**"/> 
                <exclude name="lib/junit/**"/> 
                <exclude name="lib/junit_4/**"/> 
                <exclude name="lib/**javadoc.jar"/> 
                <exclude name="copyright"/> 
                <exclude name="license.txt"/> 
            </tarfileset>
            <tarfileset dir="${dist.jar.dir}/queleadoc"
                        username="root"
                        group="root"
                        prefix="/usr/share/doc/quelea">
            </tarfileset>
            <tarfileset file="quelea.desktop"
                        prefix="/usr/share/applications"/>
        </deb>
        <delete dir="${dist.jar.dir}/queleadoc"/>
        <mkdir dir="${dist.jar.dir}/standalone"/>
        <move file="${dist.jar.dir}/Quelea-temp.deb" tofile="${DebInstaller}"/>
        
        <echo message="Building cross platform installer"/>
        <izpack input="${basedir}/izpack/config.xml" output="${CPInstaller}" basedir="${dist.jar.dir}"/>
        
        <echo message="Generating windows installer using inno setup."/>
        <echo message="For this to work inno setup needs to be installed and the appropriate paths set in build-install.bat. This will only work on Windows."/>
        <launch4j configFile="launch4j/config.xml" />  
        <!-- Generate exe from jar -->
        <exec dir="${dist.jar.dir}" executable="cmd" failifexecutionfails="false" failonerror="false">
            <arg value="/c build-install.bat"/>
        </exec>
        <move file="${dist.jar.dir}/Output/Quelea.exe" tofile="${WindowsInstaller}" failonerror="false"/>
        <delete dir="${dist.jar.dir}/Output" verbose="true" failonerror="false"/>
        
<!--        <zip destfile="${Portable}" basedir="${dist.jar.dir}" excludes="standalone/"/>-->
    </target>
    
    <target name="upload" depends="jar">
        <taskdef classname="net.bluecow.googlecode.ant.GoogleCodeUploadTask" classpath="lib/ant-googlecode-0.0.3.jar" name="gcupload"/>
        <input
            message="Username to use for upload:"
            addproperty="user"
        />
        <input
            message="Password for ${user} (CAREFUL, IT ECHOES!!):"
            addproperty="pass"
        />
        
        <gcupload 
            username="${user}" 
            password="${pass}" 
            projectname="quelea-projection" 
            filename="${WindowsInstaller}" 
            targetfilename="${WindowsInstallerName}"
            summary="Windows installer of Quelea, version ${quelea.version}"
            labels="Featured, Type-Installer, OpSys-Windows"
        />
        <gcupload 
            username="${user}" 
            password="${pass}" 
            projectname="quelea-projection" 
            filename="${CPInstaller}" 
            targetfilename="${CPInstallerName}"
            summary="Cross-platform installer of Quelea, version ${quelea.version}"
            labels="Featured, Type-Installer, OpSys-Linux"
        />
        <gcupload 
            username="${user}" 
            password="${pass}" 
            projectname="quelea-projection" 
            filename="${DebInstaller}" 
            targetfilename="${DebInstallerName}"
            summary="Debian installer of Quelea, version ${quelea.version}"
            labels="Featured, Type-Package, OpSys-Linux"
        />
    </target>
    <!--

    There exist several targets which are by default empty and which can be 
    used for execution of your tasks. These targets are usually executed 
    before and after some main targets. They are: 

      -pre-init:                 called before initialization of project properties
      -post-init:                called after initialization of project properties
      -pre-compile:              called before javac compilation
      -post-compile:             called after javac compilation
      -pre-compile-single:       called before javac compilation of single file
      -post-compile-single:      called after javac compilation of single file
      -pre-compile-test:         called before javac compilation of JUnit tests
      -post-compile-test:        called after javac compilation of JUnit tests
      -pre-compile-test-single:  called before javac compilation of single JUnit test
      -post-compile-test-single: called after javac compilation of single JUunit test
      -pre-jar:                  called before JAR building
      -post-jar:                 called after JAR building
      -post-clean:               called after cleaning build products

    (Targets beginning with '-' are not intended to be called on their own.)

    Example of inserting an obfuscator after compilation could look like this:

        <target name="-post-compile">
            <obfuscate>
                <fileset dir="${build.classes.dir}"/>
            </obfuscate>
        </target>

    For list of available properties check the imported 
    nbproject/build-impl.xml file. 


    Another way to customize the build is by overriding existing main targets.
    The targets of interest are: 

      -init-macrodef-javac:     defines macro for javac compilation
      -init-macrodef-junit:     defines macro for junit execution
      -init-macrodef-debug:     defines macro for class debugging
      -init-macrodef-java:      defines macro for class execution
      -do-jar-with-manifest:    JAR building (if you are using a manifest)
      -do-jar-without-manifest: JAR building (if you are not using a manifest)
      run:                      execution of project 
      -javadoc-build:           Javadoc generation
      test-report:              JUnit report generation

    An example of overriding the target for project execution could look like this:

        <target name="run" depends="Quelea-impl.jar">
            <exec dir="bin" executable="launcher.exe">
                <arg file="${dist.jar}"/>
            </exec>
        </target>

    Notice that the overridden target depends on the jar target and not only on 
    the compile target as the regular run target does. Again, for a list of available 
    properties which you can use, check the target you are overriding in the
    nbproject/build-impl.xml file. 

    -->
</project>
